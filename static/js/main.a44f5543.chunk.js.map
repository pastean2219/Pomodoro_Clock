{"version":3,"sources":["components/ClockContainer.js","components/SetTime.js","App.js","index.js"],"names":["ClockContainer","props","className","id","currentTimer","changeToTime","clockCount","onClick","controlPlayPause","icon","faPlay","faPause","controlReset","faSyncAlt","library","add","faCoffee","faMinusSquare","faPlusSquare","SetTime","title","toLowerCase","handleIncrease","count","handleDecrease","audio","document","getElementById","App","state","breakCount","sessionCount","isPlaying","clearInterval","loop","setState","setInterval","play","minutes","Math","floor","seconds","handleLengthChange","timerType","newCount","handleBreakDecrease","handleBreakIncrease","handleSessionIncrease","handleSessionDecrease","undefined","this","breakProps","sessionProps","bind","React","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a44f5543.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faPause, faSyncAlt} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst ClockContainer = (props) => { \r\n       \r\n    return ( \r\n        <div className=\"clock-container\">\r\n            <h1 id=\"timer-label\">{props.currentTimer}</h1>\r\n            <span id=\"time-left\">{props.changeToTime(props.clockCount)}</span>\r\n            <div className=\"flex\">\r\n                <button id=\"start_stop\" onClick={props.controlPlayPause}>\r\n                    <FontAwesomeIcon icon={faPlay}/> \r\n                    <FontAwesomeIcon icon={faPause}/> \r\n                    </button>\r\n                <button id=\"reset\" onClick={props.controlReset}><FontAwesomeIcon icon={faSyncAlt}/></button>\r\n                \r\n            </div>\r\n        </div> \r\n     );\r\n}\r\n \r\nexport default ClockContainer;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faCoffee, faMinusSquare, faPlusSquare} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faCoffee, faMinusSquare, faPlusSquare)\r\n\r\nconst SetTime\r\n = (props) => {\r\n     const id = props.title.toLowerCase();\r\n    return ( \r\n        <div className=\"timer-container\">\r\n            <h2 id={`${id}-label`}>{props.title} Length</h2>\r\n            <div className=\"flex buttonsSpan\">\r\n                <button id={`${id}-decrement`} onClick={ props.handleIncrease}><FontAwesomeIcon icon={faMinusSquare}/></button>\r\n                <span id={`${id}-length`}> {props.count} </span>\r\n                <button id={`${id}-increment`} onClick={ props.handleDecrease}><FontAwesomeIcon icon={faPlusSquare}/></button>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SetTime;","\nimport React from 'react';\nimport './App.css';\nimport ClockContainer from './components/ClockContainer';\nimport SetTime from './components/SetTime';\n\n\nconst audio = document.getElementById('beep');\nclass App extends React.Component {\n  \n  state = {\n    breakCount: 5,\n    sessionCount: 25,\n    clockCount: 25*60,\n    currentTimer: \"Session\",\n    isPlaying: false,\n  }\n  \n  constructor(props) {\n    super(props);\n    this.loop = undefined;\n    \n  }\n  componentWillUnmount() {\n    clearInterval(this.loop);\n  }\n\n  controlPlayPause = () => {\n    const {isPlaying} = this.state;\n    if(isPlaying) {\n      clearInterval(this.loop);\n      this.setState({\n        isPlaying: false\n      });\n    } else {\n      this.setState({\n        isPlaying: true\n      });\n      this.loop = setInterval(() => {\n        const {clockCount, currentTimer, breakCount, sessionCount} = this.state;\n\n        if(clockCount === 0) {\n          this.setState({\n            currentTimer: (currentTimer === \"Session\") ? \"Break\" : \"Session\",\n            clockCount: (currentTimer === \"Session\") ? (breakCount * 60) : (sessionCount * 60)\n          });\n          \n          audio.play()\n          \n        } else {\n          this.setState({\n            clockCount:clockCount - 1\n          });\n        }\n\n        \n      }, 1000);\n    }\n  }\n\n  controlReset = () => {\n    this.setState({\n      breakCount: 5,\n      sessionCount: 25,\n      clockCount: 25*60,\n      currentTimer: \"Session\",\n      isPlaying: false,\n    });\n    clearInterval(this.loop);\n\n    \n    \n  }\n\n  changeToTime = (count) => {\n    let minutes = Math.floor(count / 60);\n    let seconds = count % 60;\n    minutes = minutes < 10 ? (\"0\" + minutes) : minutes;\n    \n    seconds = seconds < 10 ? (\"0\" + seconds) : seconds;\n    return `${minutes} : ${seconds}`;\n}\n\nhandleLengthChange = (count, timerType) => {\n    const { \n      sessionCount, \n      breakCount, \n      isPlaying, \n      currentTimer\n    } = this.state;\n    \n    let newCount;\n    \n    if(timerType === 'session') {\n      newCount = sessionCount + count;\n    } else {\n      newCount = breakCount + count;\n    }\n    \n    if(newCount > 0 && newCount < 61 && !isPlaying) {\n      this.setState({\n        [`${timerType}Count`]: newCount\n      });\n      \n      if(currentTimer.toLowerCase() === timerType) {\n        this.setState({\n          clockCount: newCount * 60\n        })\n      }\n    }\n  }\n\n\nhandleBreakDecrease = () => {\n  const {breakCount, isPlaying, currentTimer} = this.state;\n  if(breakCount >1) {\n    if(!isPlaying && currentTimer === \"Break\") {\n      this.setState({\n        breakCount: breakCount - 1,\n        clockCount: (breakCount - 1) * 60\n      });\n    } else {\n      this.setState({\n        breakCount: breakCount -1\n      });\n    }\n  }\n}\n\nhandleBreakIncrease = () => {\n  const {breakCount, isPlaying, currentTimer} = this.state;\n  if(breakCount <60) {\n    if(!isPlaying && currentTimer === \"Break\") {\n      this.setState({\n        breakCount: breakCount + 1,\n        clockCount: (breakCount + 1) * 60\n      });\n    } else {\n      this.setState({\n        breakCount: breakCount +1\n      });\n    }\n  }\n}\nhandleSessionIncrease = () => {\n  const {sessionCount, isPlaying, currentTimer} = this.state;\n  if(sessionCount >1) {\n    if(!isPlaying && currentTimer === \"Session\") {\n      this.setState({\n        sessionCount: sessionCount - 1,\n        clockCount: (sessionCount - 1) * 60\n      });\n    } else {\n      this.setState({\n        sessionCount: sessionCount -1\n      });\n    }\n  }\n}\nhandleSessionDecrease = () => {\n  const {sessionCount, isPlaying, currentTimer} = this.state;\n  if(sessionCount < 60) {\n    if(!isPlaying && currentTimer === \"Session\") {\n      this.setState({\n        sessionCount: sessionCount + 1,\n        clockCount: (sessionCount + 1) * 60\n      });\n    } else {\n      this.setState({\n        sessionCount: sessionCount +1\n      });\n    }\n  }\n}\n\n\n  render() { \n    const {breakCount, sessionCount, clockCount,currentTimer} = this.state;\n    const breakProps = {\n      title: \"Break\",\n      count: breakCount,\n      handleDecrease: this.handleBreakIncrease,\n      handleIncrease: this.handleBreakDecrease\n    }\n\n    const sessionProps = {\n      title: \"Session\",\n      count: sessionCount,\n      handleDecrease: this.handleSessionDecrease,\n      handleIncrease: this.handleSessionIncrease\n    }\n\n    \n  \n\n    return (\n      <div className=\"App\">\n        <h1>Pomodoro Clock</h1>\n        <div className=\"flex\">\n          <SetTime {...breakProps} />\n          <SetTime {...sessionProps} />\n        </div>\n        <div>\n          <ClockContainer \n            controlPlayPause={this.controlPlayPause.bind(this)} \n            clockCount={clockCount} currentTimer={currentTimer} \n            changeToTime = {this.changeToTime}\n            controlReset={this.controlReset.bind(this)}\n          />\n        </div>  \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}